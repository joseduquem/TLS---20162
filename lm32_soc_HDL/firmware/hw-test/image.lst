
image:     formato del fichero elf32-lm32

Secciones:
Ind Nombre        Tamaño    VMA       LMA       Desp fich Alin
  0 .text         00000aa0  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       00000060  00000aa0  00000aa0  00000af4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000010  00000b00  00000b00  00000b54  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000084  00000b10  00000b10  00000b64  2**2
                  ALLOC
  4 .debug_abbrev 00000288  00000000  00000000  00000b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000071a  00000000  00000000  00000dec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000007c6  00000000  00000000  00001506  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001b0  00000000  00000000  00001ccc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000283  00000000  00000000  00001e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 000001d5  00000000  00000000  000020ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00000060  00000000  00000000  000022d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000040  00000000  00000000  00002334  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000025c  00000000  00000000  00002374  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000011  00000000  00000000  000025d0  2**0
                  CONTENTS, READONLY
 14 .debug_ranges 00000018  00000000  00000000  000025e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Desensamblado de la sección .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 3b 	calli 100 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_breakpoint_handler>:
  20:	34 00 00 00 	nop
  24:	34 00 00 00 	nop
  28:	34 00 00 00 	nop
  2c:	34 00 00 00 	nop
  30:	34 00 00 00 	nop
  34:	34 00 00 00 	nop
  38:	34 00 00 00 	nop
  3c:	34 00 00 00 	nop

00000040 <_ibuserror_handler>:
  40:	34 00 00 00 	nop
  44:	34 00 00 00 	nop
  48:	34 00 00 00 	nop
  4c:	34 00 00 00 	nop
  50:	34 00 00 00 	nop
  54:	34 00 00 00 	nop
  58:	34 00 00 00 	nop
  5c:	34 00 00 00 	nop

00000060 <_watchpoint_handler>:
  60:	34 00 00 00 	nop
  64:	34 00 00 00 	nop
  68:	34 00 00 00 	nop
  6c:	34 00 00 00 	nop
  70:	34 00 00 00 	nop
  74:	34 00 00 00 	nop
  78:	34 00 00 00 	nop
  7c:	34 00 00 00 	nop

00000080 <_dbuserror_handler>:
  80:	34 00 00 00 	nop
  84:	34 00 00 00 	nop
  88:	34 00 00 00 	nop
  8c:	34 00 00 00 	nop
  90:	34 00 00 00 	nop
  94:	34 00 00 00 	nop
  98:	34 00 00 00 	nop
  9c:	34 00 00 00 	nop

000000a0 <_divzero_handler>:
  a0:	34 00 00 00 	nop
  a4:	34 00 00 00 	nop
  a8:	34 00 00 00 	nop
  ac:	34 00 00 00 	nop
  b0:	34 00 00 00 	nop
  b4:	34 00 00 00 	nop
  b8:	34 00 00 00 	nop
  bc:	34 00 00 00 	nop

000000c0 <_interrupt_handler>:
  c0:	5b 9d 00 00 	sw (sp+0),ra
  c4:	f8 00 00 2b 	calli 170 <_save_all>
  c8:	90 40 08 00 	rcsr r1,IP
  cc:	f8 00 01 57 	calli 628 <irq_handler>
  d0:	78 01 ff ff 	mvhi r1,0xffff
  d4:	38 21 ff ff 	ori r1,r1,0xffff
  d8:	d0 41 00 00 	wcsr IP,r1
  dc:	e0 00 00 38 	bi 1bc <_restore_all_and_eret>

000000e0 <_scall_handler>:
  e0:	34 00 00 00 	nop
  e4:	34 00 00 00 	nop
  e8:	34 00 00 00 	nop
  ec:	34 00 00 00 	nop
  f0:	34 00 00 00 	nop
  f4:	34 00 00 00 	nop
  f8:	34 00 00 00 	nop
  fc:	34 00 00 00 	nop

00000100 <_crt0>:
 100:	78 1c 00 00 	mvhi sp,0x0
 104:	3b 9c 0f fc 	ori sp,sp,0xffc
 108:	78 1a 00 00 	mvhi gp,0x0
 10c:	3b 5a 0b 10 	ori gp,gp,0xb10
 110:	78 01 00 00 	mvhi r1,0x0
 114:	38 21 0b 10 	ori r1,r1,0xb10
 118:	78 03 00 00 	mvhi r3,0x0
 11c:	38 63 0b 94 	ori r3,r3,0xb94

00000120 <.clearBSS>:
 120:	44 23 00 04 	be r1,r3,130 <.callMain>
 124:	58 20 00 00 	sw (r1+0),r0
 128:	34 21 00 04 	addi r1,r1,4
 12c:	e3 ff ff fd 	bi 120 <.clearBSS>

00000130 <.callMain>:
 130:	34 01 00 00 	mvi r1,0
 134:	34 02 00 00 	mvi r2,0
 138:	34 03 00 00 	mvi r3,0
 13c:	f8 00 00 33 	calli 208 <main>

00000140 <irq_enable>:
 140:	34 01 00 01 	mvi r1,1
 144:	d0 01 00 00 	wcsr IE,r1
 148:	c3 a0 00 00 	ret

0000014c <irq_disable>:
 14c:	34 01 00 00 	mvi r1,0
 150:	d0 01 00 00 	wcsr IE,r1
 154:	c3 a0 00 00 	ret

00000158 <irq_set_mask>:
 158:	d0 21 00 00 	wcsr IM,r1
 15c:	c3 a0 00 00 	ret

00000160 <irq_get_mask>:
 160:	90 20 08 00 	rcsr r1,IM
 164:	c3 a0 00 00 	ret

00000168 <jump>:
 168:	c0 20 00 00 	b r1

0000016c <halt>:
 16c:	e0 00 00 00 	bi 16c <halt>

00000170 <_save_all>:
 170:	37 9c ff 80 	addi sp,sp,-128
 174:	5b 81 00 04 	sw (sp+4),r1
 178:	5b 82 00 08 	sw (sp+8),r2
 17c:	5b 83 00 0c 	sw (sp+12),r3
 180:	5b 84 00 10 	sw (sp+16),r4
 184:	5b 85 00 14 	sw (sp+20),r5
 188:	5b 86 00 18 	sw (sp+24),r6
 18c:	5b 87 00 1c 	sw (sp+28),r7
 190:	5b 88 00 20 	sw (sp+32),r8
 194:	5b 89 00 24 	sw (sp+36),r9
 198:	5b 8a 00 28 	sw (sp+40),r10
 19c:	5b 9e 00 78 	sw (sp+120),ea
 1a0:	5b 9f 00 7c 	sw (sp+124),ba
 1a4:	2b 81 00 80 	lw r1,(sp+128)
 1a8:	5b 81 00 74 	sw (sp+116),r1
 1ac:	bb 80 08 00 	mv r1,sp
 1b0:	34 21 00 80 	addi r1,r1,128
 1b4:	5b 81 00 70 	sw (sp+112),r1
 1b8:	c3 a0 00 00 	ret

000001bc <_restore_all_and_eret>:
 1bc:	2b 81 00 04 	lw r1,(sp+4)
 1c0:	2b 82 00 08 	lw r2,(sp+8)
 1c4:	2b 83 00 0c 	lw r3,(sp+12)
 1c8:	2b 84 00 10 	lw r4,(sp+16)
 1cc:	2b 85 00 14 	lw r5,(sp+20)
 1d0:	2b 86 00 18 	lw r6,(sp+24)
 1d4:	2b 87 00 1c 	lw r7,(sp+28)
 1d8:	2b 88 00 20 	lw r8,(sp+32)
 1dc:	2b 89 00 24 	lw r9,(sp+36)
 1e0:	2b 8a 00 28 	lw r10,(sp+40)
 1e4:	2b 9d 00 74 	lw ra,(sp+116)
 1e8:	2b 9e 00 78 	lw ea,(sp+120)
 1ec:	2b 9f 00 7c 	lw ba,(sp+124)
 1f0:	2b 9c 00 70 	lw sp,(sp+112)
 1f4:	c3 c0 00 00 	eret

000001f8 <get_sp>:
 1f8:	bb 80 08 00 	mv r1,sp
 1fc:	c3 a0 00 00 	ret

00000200 <get_gp>:
 200:	bb 40 08 00 	mv r1,gp
 204:	c3 a0 00 00 	ret

00000208 <main>:
 * 
 */

#include "soc-hw.h"

int  main(){
 208:	37 9c ff ac 	addi sp,sp,-84
 20c:	5b 8b 00 44 	sw (sp+68),r11
 210:	5b 8c 00 40 	sw (sp+64),r12
 214:	5b 8d 00 3c 	sw (sp+60),r13
 218:	5b 8e 00 38 	sw (sp+56),r14
 21c:	5b 8f 00 34 	sw (sp+52),r15
 220:	5b 90 00 30 	sw (sp+48),r16
 224:	5b 91 00 2c 	sw (sp+44),r17
 228:	5b 92 00 28 	sw (sp+40),r18
 22c:	5b 93 00 24 	sw (sp+36),r19
 230:	5b 94 00 20 	sw (sp+32),r20
 234:	5b 95 00 1c 	sw (sp+28),r21
 238:	5b 96 00 18 	sw (sp+24),r22
 23c:	5b 97 00 14 	sw (sp+20),r23
 240:	5b 98 00 10 	sw (sp+16),r24
 244:	5b 99 00 0c 	sw (sp+12),r25
 248:	5b 9b 00 08 	sw (sp+8),fp
 24c:	5b 9d 00 04 	sw (sp+4),ra
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 250:	34 13 00 10 	mvi r19,16
 */

#include "soc-hw.h"

int  main(){
	isr_init();
 254:	f8 00 01 0e 	calli 68c <isr_init>
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 258:	34 12 00 0e 	mvi r18,14

#include "soc-hw.h"

int  main(){
	isr_init();
	tic_init();
 25c:	f8 00 01 3e 	calli 754 <tic_init>
			wifi_putchar(0x61);//a
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=98)&(k>=82))){
			wifi_putchar(0x62);//b
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
 260:	34 11 00 06 	mvi r17,6
#include "soc-hw.h"

int  main(){
	isr_init();
	tic_init();
	irq_enable();
 264:	fb ff ff b7 	calli 140 <irq_enable>
	
	init_wifi();
 268:	f8 00 01 8c 	calli 898 <init_wifi>
 26c:	e0 00 00 57 	bi 3c8 <main+0x1c0>
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
		//uart_putchar(1);
			wifi_putchar(0x61);//a
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=98)&(k>=82))){
 270:	36 18 ff c6 	addi r24,r16,-58
 274:	35 f6 ff c6 	addi r22,r15,-58
 278:	23 18 00 ff 	andi r24,r24,0xff
 27c:	22 d6 00 ff 	andi r22,r22,0xff
 280:	35 cd ff c6 	addi r13,r14,-58
 284:	f2 58 c0 00 	cmpgeu r24,r18,r24
 288:	f2 56 b0 00 	cmpgeu r22,r18,r22
 28c:	21 ad 00 ff 	andi r13,r13,0xff
 290:	35 81 ff ae 	addi r1,r12,-82
 294:	f2 4d 68 00 	cmpgeu r13,r18,r13
 298:	20 21 00 ff 	andi r1,r1,0xff
 29c:	a2 d8 20 00 	and r4,r22,r24
 2a0:	f2 61 08 00 	cmpgeu r1,r19,r1
 2a4:	a0 8d d8 00 	and fp,r4,r13
 2a8:	a3 61 08 00 	and r1,fp,r1
 2ac:	5c 20 00 ce 	bne r1,r0,5e4 <main+0x3dc>
			wifi_putchar(0x62);//b
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
 2b0:	36 10 ff b6 	addi r16,r16,-74
 2b4:	35 ef ff b6 	addi r15,r15,-74
 2b8:	35 ce ff b6 	addi r14,r14,-74
 2bc:	35 8c ff b6 	addi r12,r12,-74
 2c0:	22 10 00 ff 	andi r16,r16,0xff
 2c4:	21 ef 00 ff 	andi r15,r15,0xff
 2c8:	21 ce 00 ff 	andi r14,r14,0xff
 2cc:	21 8c 00 ff 	andi r12,r12,0xff
 2d0:	f2 30 80 00 	cmpgeu r16,r17,r16
 2d4:	f2 2f 78 00 	cmpgeu r15,r17,r15
 2d8:	f2 2e 70 00 	cmpgeu r14,r17,r14
 2dc:	f2 2c 60 00 	cmpgeu r12,r17,r12
 2e0:	a1 f0 10 00 	and r2,r15,r16
 2e4:	a1 8e 18 00 	and r3,r12,r14
 2e8:	5b 83 00 54 	sw (sp+84),r3
 2ec:	a0 43 08 00 	and r1,r2,r3
 2f0:	5c 20 00 b6 	bne r1,r0,5c8 <main+0x3c0>
			wifi_putchar(0x63);//c
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 2f4:	a0 4d 10 00 	and r2,r2,r13
 2f8:	a0 4c 08 00 	and r1,r2,r12
 2fc:	5c 20 00 ac 	bne r1,r0,5ac <main+0x3a4>
			wifi_putchar(0x64);//d
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
 300:	a3 6b d8 00 	and fp,fp,r11
 304:	5f 60 00 a3 	bne fp,r0,590 <main+0x388>
			wifi_putchar(0x65);//e
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
 308:	a1 cb d8 00 	and fp,r14,r11
 30c:	a0 9b 20 00 	and r4,r4,fp
 310:	5c 80 00 9b 	bne r4,r0,57c <main+0x374>
			wifi_putchar(0x66);//f
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
 314:	a0 4b 10 00 	and r2,r2,r11
 318:	5c 40 00 96 	bne r2,r0,570 <main+0x368>
			wifi_putchar(0x67);//g
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
 31c:	a2 16 18 00 	and r3,r16,r22
 320:	a0 6d 18 00 	and r3,r3,r13
 324:	a0 6b 08 00 	and r1,r3,r11
 328:	5c 20 00 8d 	bne r1,r0,55c <main+0x354>
			wifi_putchar(0x68);//h
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
 32c:	a3 19 c8 00 	and r25,r24,r25
 330:	a3 37 c8 00 	and r25,r25,r23
 334:	a3 2c 08 00 	and r1,r25,r12
 338:	5c 20 00 82 	bne r1,r0,540 <main+0x338>
			wifi_putchar(0x69);//i
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x6C);//l
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
 33c:	a1 f5 80 00 	and r16,r15,r21
 340:	a1 ab 10 00 	and r2,r13,r11
 344:	a2 02 08 00 	and r1,r16,r2
 348:	5c 20 00 77 	bne r1,r0,524 <main+0x31c>
			wifi_putchar(0x6D);//m
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 34c:	a0 6c 18 00 	and r3,r3,r12
 350:	5c 60 00 70 	bne r3,r0,510 <main+0x308>
			wifi_putchar(0x6E);//n
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
 354:	2b 83 00 54 	lw r3,(sp+84)
 358:	a1 f8 c0 00 	and r24,r15,r24
 35c:	a3 03 08 00 	and r1,r24,r3
 360:	5c 20 00 67 	bne r1,r0,4fc <main+0x2f4>
			wifi_putchar(0x6F);//o
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
 364:	a3 02 c0 00 	and r24,r24,r2
 368:	5f 00 00 62 	bne r24,r0,4f0 <main+0x2e8>
			wifi_putchar(0x70);//p
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
 36c:	a1 97 b8 00 	and r23,r12,r23
 370:	a2 17 08 00 	and r1,r16,r23
 374:	5c 20 00 5c 	bne r1,r0,4e4 <main+0x2dc>
			wifi_putchar(0x71);//q
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 378:	a2 d5 a8 00 	and r21,r22,r21
 37c:	a1 8d 68 00 	and r13,r12,r13
 380:	a2 ad 08 00 	and r1,r21,r13
 384:	5c 20 00 55 	bne r1,r0,4d8 <main+0x2d0>
			wifi_putchar(0x72);//r
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
 388:	2b 82 00 50 	lw r2,(sp+80)
 38c:	a0 4c 08 00 	and r1,r2,r12
 390:	5c 20 00 4f 	bne r1,r0,4cc <main+0x2c4>
			wifi_putchar(0x73);//s
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
 394:	a2 0e 70 00 	and r14,r16,r14
 398:	a1 cb 08 00 	and r1,r14,r11
 39c:	5c 20 00 49 	bne r1,r0,4c0 <main+0x2b8>
			wifi_putchar(0x74);//t
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
 3a0:	a1 cc 70 00 	and r14,r14,r12
 3a4:	5d c0 00 44 	bne r14,r0,4b4 <main+0x2ac>
			wifi_putchar(0x75);//u
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
 3a8:	a2 b7 b8 00 	and r23,r21,r23
 3ac:	5e e0 00 3f 	bne r23,r0,4a8 <main+0x2a0>
			wifi_putchar(0x76);//v
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
 3b0:	a2 9b d8 00 	and fp,r20,fp
 3b4:	5f 60 00 3a 	bne fp,r0,49c <main+0x294>
			wifi_putchar(0x78);//x
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 3b8:	a3 2b 58 00 	and r11,r25,r11
 3bc:	5d 60 00 31 	bne r11,r0,480 <main+0x278>
			wifi_putchar(0x79);//y
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 3c0:	a2 8d 68 00 	and r13,r20,r13
 3c4:	5d a0 00 33 	bne r13,r0,490 <main+0x288>
	//char n;
	//char o;
	int e;
	e=0;	
	do{	
		ReadChanel(0x00);	
 3c8:	34 01 00 00 	mvi r1,0
 3cc:	f8 00 01 82 	calli 9d4 <ReadChanel>
		c=GetByteOne();
 3d0:	f8 00 01 a8 	calli a70 <GetByteOne>
 3d4:	b8 20 80 00 	mv r16,r1
		ReadChanel(0x01);
 3d8:	34 01 00 01 	mvi r1,1
 3dc:	f8 00 01 7e 	calli 9d4 <ReadChanel>
		d=GetByteOne();
 3e0:	f8 00 01 a4 	calli a70 <GetByteOne>
 3e4:	b8 20 78 00 	mv r15,r1
		ReadChanel(0x02);
 3e8:	34 01 00 02 	mvi r1,2
 3ec:	f8 00 01 7a 	calli 9d4 <ReadChanel>
		j=GetByteOne();
 3f0:	f8 00 01 a0 	calli a70 <GetByteOne>
 3f4:	b8 20 70 00 	mv r14,r1
		ReadChanel(0x03);
 3f8:	34 01 00 03 	mvi r1,3
 3fc:	f8 00 01 76 	calli 9d4 <ReadChanel>
		k=GetByteOne();
 400:	f8 00 01 9c 	calli a70 <GetByteOne>
 404:	b8 20 60 00 	mv r12,r1
		uart_putchar(c);
 408:	ba 00 08 00 	mv r1,r16
 40c:	f8 00 00 ed 	calli 7c0 <uart_putchar>
		uart_putchar(d);
 410:	b9 e0 08 00 	mv r1,r15
 414:	f8 00 00 eb 	calli 7c0 <uart_putchar>
		uart_putchar(j);
 418:	b9 c0 08 00 	mv r1,r14
 41c:	f8 00 00 e9 	calli 7c0 <uart_putchar>
		uart_putchar(k);
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 420:	36 15 ff ae 	addi r21,r16,-82
 424:	35 f9 ff ae 	addi r25,r15,-82
		ReadChanel(0x03);
		k=GetByteOne();
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
 428:	b9 80 08 00 	mv r1,r12
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 42c:	22 b5 00 ff 	andi r21,r21,0xff
 430:	23 39 00 ff 	andi r25,r25,0xff
 434:	35 d7 ff ae 	addi r23,r14,-82
		ReadChanel(0x03);
		k=GetByteOne();
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
 438:	f8 00 00 e2 	calli 7c0 <uart_putchar>
		uart_putchar(0);
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 43c:	f2 75 a8 00 	cmpgeu r21,r19,r21
 440:	f2 79 c8 00 	cmpgeu r25,r19,r25
 444:	22 f7 00 ff 	andi r23,r23,0xff
 448:	35 8b ff c6 	addi r11,r12,-58
		k=GetByteOne();
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
		uart_putchar(0);
 44c:	34 01 00 00 	mvi r1,0
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 450:	f2 77 b8 00 	cmpgeu r23,r19,r23
 454:	21 6b 00 ff 	andi r11,r11,0xff
		k=GetByteOne();
		uart_putchar(c);
		uart_putchar(d);
		uart_putchar(j);
		uart_putchar(k);
		uart_putchar(0);
 458:	f8 00 00 da 	calli 7c0 <uart_putchar>
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
 45c:	a3 35 a0 00 	and r20,r25,r21
 460:	f2 4b 58 00 	cmpgeu r11,r18,r11
 464:	a2 97 08 00 	and r1,r20,r23
 468:	5b 81 00 50 	sw (sp+80),r1
 46c:	a0 2b 08 00 	and r1,r1,r11
 470:	44 20 ff 80 	be r1,r0,270 <main+0x68>
		//uart_putchar(1);
			wifi_putchar(0x61);//a
 474:	34 01 00 61 	mvi r1,97
 478:	f8 00 01 26 	calli 910 <wifi_putchar>
 47c:	e3 ff ff 7d 	bi 270 <main+0x68>
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x78);//x
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
			wifi_putchar(0x79);//y
 480:	34 01 00 79 	mvi r1,121
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 484:	a2 8d 68 00 	and r13,r20,r13
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x78);//x
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
			wifi_putchar(0x79);//y
 488:	f8 00 01 22 	calli 910 <wifi_putchar>
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
 48c:	45 a0 ff cf 	be r13,r0,3c8 <main+0x1c0>
			wifi_putchar(0x7A);//z
 490:	34 01 00 7a 	mvi r1,122
 494:	f8 00 01 1f 	calli 910 <wifi_putchar>
 498:	e3 ff ff cc 	bi 3c8 <main+0x1c0>
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x76);//v
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x78);//x
 49c:	34 01 00 78 	mvi r1,120
 4a0:	f8 00 01 1c 	calli 910 <wifi_putchar>
 4a4:	e3 ff ff c5 	bi 3b8 <main+0x1b0>
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x75);//u
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x76);//v
 4a8:	34 01 00 76 	mvi r1,118
 4ac:	f8 00 01 19 	calli 910 <wifi_putchar>
 4b0:	e3 ff ff c0 	bi 3b0 <main+0x1a8>
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x74);//t
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x75);//u
 4b4:	34 01 00 75 	mvi r1,117
 4b8:	f8 00 01 16 	calli 910 <wifi_putchar>
 4bc:	e3 ff ff bb 	bi 3a8 <main+0x1a0>
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x73);//s
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x74);//t
 4c0:	34 01 00 74 	mvi r1,116
 4c4:	f8 00 01 13 	calli 910 <wifi_putchar>
 4c8:	e3 ff ff b6 	bi 3a0 <main+0x198>
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x72);//r
		}
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x73);//s
 4cc:	34 01 00 73 	mvi r1,115
 4d0:	f8 00 01 10 	calli 910 <wifi_putchar>
 4d4:	e3 ff ff b0 	bi 394 <main+0x18c>
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x71);//q
		}
		if(((c<=98)&(c>=82))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x72);//r
 4d8:	34 01 00 72 	mvi r1,114
 4dc:	f8 00 01 0d 	calli 910 <wifi_putchar>
 4e0:	e3 ff ff aa 	bi 388 <main+0x180>
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x70);//p
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x71);//q
 4e4:	34 01 00 71 	mvi r1,113
 4e8:	f8 00 01 0a 	calli 910 <wifi_putchar>
 4ec:	e3 ff ff a3 	bi 378 <main+0x170>
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x6F);//o
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x70);//p
 4f0:	34 01 00 70 	mvi r1,112
 4f4:	f8 00 01 07 	calli 910 <wifi_putchar>
 4f8:	e3 ff ff 9d 	bi 36c <main+0x164>
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x6E);//n
		}
		if(((c<=72)&(c>=58))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x6F);//o
 4fc:	34 01 00 6f 	mvi r1,111
 500:	5b 82 00 48 	sw (sp+72),r2
 504:	f8 00 01 03 	calli 910 <wifi_putchar>
 508:	2b 82 00 48 	lw r2,(sp+72)
 50c:	e3 ff ff 96 	bi 364 <main+0x15c>
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x6D);//m
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x6E);//n
 510:	34 01 00 6e 	mvi r1,110
 514:	5b 82 00 48 	sw (sp+72),r2
 518:	f8 00 00 fe 	calli 910 <wifi_putchar>
 51c:	2b 82 00 48 	lw r2,(sp+72)
 520:	e3 ff ff 8d 	bi 354 <main+0x14c>
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x6C);//l
		}
		if(((c<=98)&(c>=82))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x6D);//m
 524:	34 01 00 6d 	mvi r1,109
 528:	5b 82 00 48 	sw (sp+72),r2
 52c:	5b 83 00 4c 	sw (sp+76),r3
 530:	f8 00 00 f8 	calli 910 <wifi_putchar>
 534:	2b 83 00 4c 	lw r3,(sp+76)
 538:	2b 82 00 48 	lw r2,(sp+72)
 53c:	e3 ff ff 84 	bi 34c <main+0x144>
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x68);//h
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x69);//i
 540:	34 01 00 69 	mvi r1,105
 544:	5b 83 00 4c 	sw (sp+76),r3
 548:	f8 00 00 f2 	calli 910 <wifi_putchar>
		}
		if(((c<=72)&(c>=58))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=80)&(k>=74))){
			wifi_putchar(0x6C);//l
 54c:	34 01 00 6c 	mvi r1,108
 550:	f8 00 00 f0 	calli 910 <wifi_putchar>
 554:	2b 83 00 4c 	lw r3,(sp+76)
 558:	e3 ff ff 79 	bi 33c <main+0x134>
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x67);//g
		}
		if(((c<=80)&(c>=74))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x68);//h
 55c:	34 01 00 68 	mvi r1,104
 560:	5b 83 00 4c 	sw (sp+76),r3
 564:	f8 00 00 eb 	calli 910 <wifi_putchar>
 568:	2b 83 00 4c 	lw r3,(sp+76)
 56c:	e3 ff ff 70 	bi 32c <main+0x124>
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x66);//f
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x67);//g
 570:	34 01 00 67 	mvi r1,103
 574:	f8 00 00 e7 	calli 910 <wifi_putchar>
 578:	e3 ff ff 69 	bi 31c <main+0x114>
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x65);//e
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=80)&(j>=74))&((k<=72)&(k>=58))){
			wifi_putchar(0x66);//f
 57c:	34 01 00 66 	mvi r1,102
 580:	5b 82 00 48 	sw (sp+72),r2
 584:	f8 00 00 e3 	calli 910 <wifi_putchar>
 588:	2b 82 00 48 	lw r2,(sp+72)
 58c:	e3 ff ff 62 	bi 314 <main+0x10c>
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x64);//d
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=72)&(k>=58))){
			wifi_putchar(0x65);//e
 590:	34 01 00 65 	mvi r1,101
 594:	5b 82 00 48 	sw (sp+72),r2
 598:	5b 84 00 4c 	sw (sp+76),r4
 59c:	f8 00 00 dd 	calli 910 <wifi_putchar>
 5a0:	2b 84 00 4c 	lw r4,(sp+76)
 5a4:	2b 82 00 48 	lw r2,(sp+72)
 5a8:	e3 ff ff 58 	bi 308 <main+0x100>
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x63);//c
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=72)&(j>=58))&((k<=80)&(k>=74))){
			wifi_putchar(0x64);//d
 5ac:	34 01 00 64 	mvi r1,100
 5b0:	5b 82 00 48 	sw (sp+72),r2
 5b4:	5b 84 00 4c 	sw (sp+76),r4
 5b8:	f8 00 00 d6 	calli 910 <wifi_putchar>
 5bc:	2b 84 00 4c 	lw r4,(sp+76)
 5c0:	2b 82 00 48 	lw r2,(sp+72)
 5c4:	e3 ff ff 4f 	bi 300 <main+0xf8>
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=98)&(k>=82))){
			wifi_putchar(0x62);//b
		}
		if(((c<=80)&(c>=74))&((d<=80)&(d>=74))&((j<=80)&(j>=74))&((k<=80)&(k>=74))){
			wifi_putchar(0x63);//c
 5c8:	34 01 00 63 	mvi r1,99
 5cc:	5b 82 00 48 	sw (sp+72),r2
 5d0:	5b 84 00 4c 	sw (sp+76),r4
 5d4:	f8 00 00 cf 	calli 910 <wifi_putchar>
 5d8:	2b 84 00 4c 	lw r4,(sp+76)
 5dc:	2b 82 00 48 	lw r2,(sp+72)
 5e0:	e3 ff ff 45 	bi 2f4 <main+0xec>
		if(((c<=98)&(c>=82))&((d<=98)&(d>=82))&((j<=98)&(j>=82))&((k<=72)&(k>=58))){
		//uart_putchar(1);
			wifi_putchar(0x61);//a
		}
		if(((c<=72)&(c>=58))&((d<=72)&(d>=58))&((j<=72)&(j>=58))&((k<=98)&(k>=82))){
			wifi_putchar(0x62);//b
 5e4:	34 01 00 62 	mvi r1,98
 5e8:	5b 84 00 4c 	sw (sp+76),r4
 5ec:	f8 00 00 c9 	calli 910 <wifi_putchar>
 5f0:	2b 84 00 4c 	lw r4,(sp+76)
 5f4:	e3 ff ff 2f 	bi 2b0 <main+0xa8>

000005f8 <isr_null>:
/***************************************************************************
 * IRQ handling
 */
void isr_null()
{
}
 5f8:	c3 a0 00 00 	ret

000005fc <tic_isr>:

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
 5fc:	78 01 00 00 	mvhi r1,0x0
 600:	38 21 0b 90 	ori r1,r1,0xb90
 604:	28 23 00 00 	lw r3,(r1+0)
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 608:	78 02 00 00 	mvhi r2,0x0
 60c:	38 42 0b 08 	ori r2,r2,0xb08
 610:	28 42 00 00 	lw r2,(r2+0)

uint32_t tic_msec;

void tic_isr()
{
	tic_msec++;
 614:	34 63 00 01 	addi r3,r3,1
 618:	58 23 00 00 	sw (r1+0),r3
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 61c:	34 01 00 0e 	mvi r1,14
 620:	58 41 00 00 	sw (r2+0),r1
}
 624:	c3 a0 00 00 	ret

00000628 <irq_handler>:
void isr_null()
{
}

void irq_handler(uint32_t pending)
{
 628:	37 9c ff f0 	addi sp,sp,-16
 62c:	5b 8b 00 10 	sw (sp+16),r11
 630:	5b 8c 00 0c 	sw (sp+12),r12
 634:	5b 8d 00 08 	sw (sp+8),r13
 638:	5b 9d 00 04 	sw (sp+4),ra
 63c:	78 0b 00 00 	mvhi r11,0x0
 640:	39 6b 0b 10 	ori r11,r11,0xb10
 644:	b8 20 60 00 	mv r12,r1
 */
void isr_null()
{
}

void irq_handler(uint32_t pending)
 648:	35 6d 00 80 	addi r13,r11,128
 64c:	e0 00 00 04 	bi 65c <irq_handler+0x34>
{
	int i;

	for(i=0; i<32; i++) {
		if (pending & 0x01) (*isr_table[i])();
 650:	35 6b 00 04 	addi r11,r11,4

void irq_handler(uint32_t pending)
{
	int i;

	for(i=0; i<32; i++) {
 654:	45 6d 00 08 	be r11,r13,674 <irq_handler+0x4c>
		if (pending & 0x01) (*isr_table[i])();
		pending >>= 1;
 658:	01 8c 00 01 	srui r12,r12,1
void irq_handler(uint32_t pending)
{
	int i;

	for(i=0; i<32; i++) {
		if (pending & 0x01) (*isr_table[i])();
 65c:	21 81 00 01 	andi r1,r12,0x1
 660:	44 20 ff fc 	be r1,r0,650 <irq_handler+0x28>
 664:	29 61 00 00 	lw r1,(r11+0)
 668:	35 6b 00 04 	addi r11,r11,4
 66c:	d8 20 00 00 	call r1

void irq_handler(uint32_t pending)
{
	int i;

	for(i=0; i<32; i++) {
 670:	5d 6d ff fa 	bne r11,r13,658 <irq_handler+0x30>
		if (pending & 0x01) (*isr_table[i])();
		pending >>= 1;
	}
}
 674:	2b 9d 00 04 	lw ra,(sp+4)
 678:	2b 8b 00 10 	lw r11,(sp+16)
 67c:	2b 8c 00 0c 	lw r12,(sp+12)
 680:	2b 8d 00 08 	lw r13,(sp+8)
 684:	37 9c 00 10 	addi sp,sp,16
 688:	c3 a0 00 00 	ret

0000068c <isr_init>:

void isr_init()
{
 68c:	78 01 00 00 	mvhi r1,0x0
 690:	78 02 00 00 	mvhi r2,0x0
 694:	38 21 0b 10 	ori r1,r1,0xb10
 698:	38 42 05 f8 	ori r2,r2,0x5f8
		if (pending & 0x01) (*isr_table[i])();
		pending >>= 1;
	}
}

void isr_init()
 69c:	34 23 00 80 	addi r3,r1,128
{
	int i;
	for(i=0; i<32; i++)
		isr_table[i] = &isr_null;
 6a0:	58 22 00 00 	sw (r1+0),r2
 6a4:	34 21 00 04 	addi r1,r1,4
}

void isr_init()
{
	int i;
	for(i=0; i<32; i++)
 6a8:	5c 23 ff fe 	bne r1,r3,6a0 <isr_init+0x14>
		isr_table[i] = &isr_null;
}
 6ac:	c3 a0 00 00 	ret

000006b0 <isr_register>:

void isr_register(int irq, isr_ptr_t isr)
{
	isr_table[irq] = isr;
 6b0:	78 03 00 00 	mvhi r3,0x0
 6b4:	3c 21 00 02 	sli r1,r1,2
 6b8:	38 63 0b 10 	ori r3,r3,0xb10
 6bc:	b4 61 18 00 	add r3,r3,r1
 6c0:	58 62 00 00 	sw (r3+0),r2
}
 6c4:	c3 a0 00 00 	ret

000006c8 <isr_unregister>:

void isr_unregister(int irq)
{
	isr_table[irq] = &isr_null;
 6c8:	78 03 00 00 	mvhi r3,0x0
 6cc:	3c 21 00 02 	sli r1,r1,2
 6d0:	38 63 0b 10 	ori r3,r3,0xb10
 6d4:	78 02 00 00 	mvhi r2,0x0
 6d8:	b4 61 18 00 	add r3,r3,r1
 6dc:	38 42 05 f8 	ori r2,r2,0x5f8
 6e0:	58 62 00 00 	sw (r3+0),r2
}
 6e4:	c3 a0 00 00 	ret

000006e8 <msleep>:
void msleep(uint32_t msec)
{
	uint32_t tcr;

	// Use timer0.1
	timer0->compare1 = (FCPU/1000)*msec;
 6e8:	78 04 00 00 	mvhi r4,0x0
 6ec:	38 84 0a a0 	ori r4,r4,0xaa0
 6f0:	28 83 00 00 	lw r3,(r4+0)
 6f4:	78 02 00 00 	mvhi r2,0x0
 6f8:	38 42 0b 08 	ori r2,r2,0xb08
 6fc:	28 42 00 00 	lw r2,(r2+0)
 700:	88 23 08 00 	mul r1,r1,r3
 704:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 708:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 70c:	34 01 00 08 	mvi r1,8
 710:	58 41 00 0c 	sw (r2+12),r1

	do {
		//halt();
 		tcr = timer0->tcr1;
 714:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 718:	20 21 00 01 	andi r1,r1,0x1
 71c:	44 20 ff fe 	be r1,r0,714 <msleep+0x2c>
}
 720:	c3 a0 00 00 	ret

00000724 <nsleep>:
void nsleep(uint32_t nsec)
{
	uint32_t tcr;

	// Use timer0.1
	timer0->compare1 = (FCPU/1000000)*nsec;
 724:	78 02 00 00 	mvhi r2,0x0
 728:	38 42 0b 08 	ori r2,r2,0xb08
 72c:	28 42 00 00 	lw r2,(r2+0)
 730:	08 21 00 64 	muli r1,r1,100
 734:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 738:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN;
 73c:	34 01 00 08 	mvi r1,8
 740:	58 41 00 0c 	sw (r2+12),r1

	do {
		//halt();
 		tcr = timer0->tcr1;
 744:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 748:	20 21 00 01 	andi r1,r1,0x1
 74c:	44 20 ff fe 	be r1,r0,744 <nsleep+0x20>
}
 750:	c3 a0 00 00 	ret

00000754 <tic_init>:
void tic_init()
{
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
 754:	78 01 00 00 	mvhi r1,0x0
 758:	38 21 0b 08 	ori r1,r1,0xb08
 75c:	28 23 00 00 	lw r3,(r1+0)
 760:	34 02 27 10 	mvi r2,10000
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
}

void tic_init()
{
	tic_msec = 0;
 764:	78 01 00 00 	mvhi r1,0x0

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
 768:	58 62 00 04 	sw (r3+4),r2
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
}

void tic_init()
{
	tic_msec = 0;
 76c:	38 21 0b 90 	ori r1,r1,0xb90

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
	timer0->counter0 = 0;
 770:	58 60 00 08 	sw (r3+8),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
}

void tic_init()
{
	tic_msec = 0;
 774:	58 20 00 00 	sw (r1+0),r0
		isr_table[i] = &isr_null;
}

void isr_register(int irq, isr_ptr_t isr)
{
	isr_table[irq] = isr;
 778:	78 02 00 00 	mvhi r2,0x0
 77c:	78 01 00 00 	mvhi r1,0x0
	tic_msec = 0;

	// Setup timer0.0
	timer0->compare0 = (FCPU/10000);
	timer0->counter0 = 0;
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 780:	34 04 00 0e 	mvi r4,14
 784:	58 64 00 00 	sw (r3+0),r4
		isr_table[i] = &isr_null;
}

void isr_register(int irq, isr_ptr_t isr)
{
	isr_table[irq] = isr;
 788:	38 21 0b 10 	ori r1,r1,0xb10
 78c:	38 42 05 fc 	ori r2,r2,0x5fc
 790:	58 22 00 04 	sw (r1+4),r2
	timer0->compare0 = (FCPU/10000);
	timer0->counter0 = 0;
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;

	isr_register(1, &tic_isr);
}
 794:	c3 a0 00 00 	ret

00000798 <uart_init>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
 798:	c3 a0 00 00 	ret

0000079c <uart_getchar>:

char uart_getchar()
{   
 79c:	78 01 00 00 	mvhi r1,0x0
 7a0:	38 21 0b 00 	ori r1,r1,0xb00
 7a4:	28 22 00 00 	lw r2,(r1+0)
	while (! (uart0->ucr & UART_DR)) ;
 7a8:	28 41 00 00 	lw r1,(r2+0)
 7ac:	20 21 00 01 	andi r1,r1,0x1
 7b0:	44 20 ff fe 	be r1,r0,7a8 <uart_getchar+0xc>
	return uart0->rxtx;
 7b4:	28 41 00 04 	lw r1,(r2+4)
}
 7b8:	20 21 00 ff 	andi r1,r1,0xff
 7bc:	c3 a0 00 00 	ret

000007c0 <uart_putchar>:

void uart_putchar(char c)
{
 7c0:	78 02 00 00 	mvhi r2,0x0
 7c4:	38 42 0b 00 	ori r2,r2,0xb00
 7c8:	28 43 00 00 	lw r3,(r2+0)
 7cc:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
 7d0:	28 62 00 00 	lw r2,(r3+0)
 7d4:	20 42 00 10 	andi r2,r2,0x10
 7d8:	5c 40 ff fe 	bne r2,r0,7d0 <uart_putchar+0x10>
	uart0->rxtx = c;
 7dc:	58 61 00 04 	sw (r3+4),r1
}
 7e0:	c3 a0 00 00 	ret

000007e4 <uart_putstr>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 7e4:	40 24 00 00 	lbu r4,(r1+0)
 7e8:	44 80 00 0b 	be r4,r0,814 <uart_putstr+0x30>
 7ec:	78 02 00 00 	mvhi r2,0x0
 7f0:	38 42 0b 00 	ori r2,r2,0xb00
 7f4:	28 43 00 00 	lw r3,(r2+0)
	return uart0->rxtx;
}

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
 7f8:	28 62 00 00 	lw r2,(r3+0)
 7fc:	20 42 00 10 	andi r2,r2,0x10
 800:	5c 40 ff fe 	bne r2,r0,7f8 <uart_putstr+0x14>
	uart0->rxtx = c;
 804:	58 64 00 04 	sw (r3+4),r4
void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
		uart_putchar(*c);
		c++;
 808:	34 21 00 01 	addi r1,r1,1
}

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 80c:	40 24 00 00 	lbu r4,(r1+0)
 810:	5c 82 ff fa 	bne r4,r2,7f8 <uart_putstr+0x14>
 814:	c3 a0 00 00 	ret

00000818 <uart_init1>:
	//uart1->lcr = 0x03;  // Line Control Register:    8N1
	//uart1->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart1->div = (FCPU/(57600*16));
}
 818:	c3 a0 00 00 	ret

0000081c <uart_getchar1>:

char uart_getchar1()
{   
 81c:	78 01 00 00 	mvhi r1,0x0
 820:	38 21 0b 04 	ori r1,r1,0xb04
 824:	28 22 00 00 	lw r2,(r1+0)
	while (! (uart1->ucr & UART_DR)) ;
 828:	28 41 00 00 	lw r1,(r2+0)
 82c:	20 21 00 01 	andi r1,r1,0x1
 830:	44 20 ff fe 	be r1,r0,828 <uart_getchar1+0xc>
	return uart1->rxtx;
 834:	28 41 00 04 	lw r1,(r2+4)
}
 838:	20 21 00 ff 	andi r1,r1,0xff
 83c:	c3 a0 00 00 	ret

00000840 <uart_putchar1>:

void uart_putchar1(char c)
{
 840:	78 02 00 00 	mvhi r2,0x0
 844:	38 42 0b 04 	ori r2,r2,0xb04
 848:	28 43 00 00 	lw r3,(r2+0)
 84c:	20 21 00 ff 	andi r1,r1,0xff
	while (uart1->ucr & UART_BUSY) ;
 850:	28 62 00 00 	lw r2,(r3+0)
 854:	20 42 00 10 	andi r2,r2,0x10
 858:	5c 40 ff fe 	bne r2,r0,850 <uart_putchar1+0x10>
	uart1->rxtx = c;
 85c:	58 61 00 04 	sw (r3+4),r1
}
 860:	c3 a0 00 00 	ret

00000864 <uart_putstr1>:

void uart_putstr1(char *str)
{
	char *c = str;
	while(*c) {
 864:	40 24 00 00 	lbu r4,(r1+0)
 868:	44 80 00 0b 	be r4,r0,894 <uart_putstr1+0x30>
 86c:	78 02 00 00 	mvhi r2,0x0
 870:	38 42 0b 04 	ori r2,r2,0xb04
 874:	28 43 00 00 	lw r3,(r2+0)
	return uart1->rxtx;
}

void uart_putchar1(char c)
{
	while (uart1->ucr & UART_BUSY) ;
 878:	28 62 00 00 	lw r2,(r3+0)
 87c:	20 42 00 10 	andi r2,r2,0x10
 880:	5c 40 ff fe 	bne r2,r0,878 <uart_putstr1+0x14>
	uart1->rxtx = c;
 884:	58 64 00 04 	sw (r3+4),r4
void uart_putstr1(char *str)
{
	char *c = str;
	while(*c) {
		uart_putchar1(*c);
		c++;
 888:	34 21 00 01 	addi r1,r1,1
}

void uart_putstr1(char *str)
{
	char *c = str;
	while(*c) {
 88c:	40 24 00 00 	lbu r4,(r1+0)
 890:	5c 82 ff fa 	bne r4,r2,878 <uart_putstr1+0x14>
 894:	c3 a0 00 00 	ret

00000898 <init_wifi>:

/***************************************************************************
 * WIFI ESP8266 Functions
 */

void init_wifi(){ //configurar el modulo como estación con puerto 80
 898:	37 9c ff f8 	addi sp,sp,-8
 89c:	5b 8b 00 08 	sw (sp+8),r11
 8a0:	5b 9d 00 04 	sw (sp+4),ra
	//nsleep(2016300);
	//int c = 0;
	//while(c==0){
		uart_putstr1("AT+CIPMUX=0\r\n");
		//c = ok();
		nsleep(2016300);
 8a4:	78 01 00 00 	mvhi r1,0x0
 8a8:	38 21 0a a4 	ori r1,r1,0xaa4
 8ac:	28 2b 00 00 	lw r11,(r1+0)
void init_wifi(){ //configurar el modulo como estación con puerto 80
	//uart_putstr1("AT+RST\r\n");
	//nsleep(2016300);
	//int c = 0;
	//while(c==0){
		uart_putstr1("AT+CIPMUX=0\r\n");
 8b0:	78 01 00 00 	mvhi r1,0x0
 8b4:	38 21 0a a8 	ori r1,r1,0xaa8
 8b8:	fb ff ff eb 	calli 864 <uart_putstr1>
		//c = ok();
		nsleep(2016300);
 8bc:	b9 60 08 00 	mv r1,r11
 8c0:	fb ff ff 99 	calli 724 <nsleep>
	//}
	//c = 0;
	//while (c==0){
		uart_putstr1("AT+CIPMODE=1\r\n");
 8c4:	78 01 00 00 	mvhi r1,0x0
 8c8:	38 21 0a b8 	ori r1,r1,0xab8
 8cc:	fb ff ff e6 	calli 864 <uart_putstr1>
		//c = ok();
		nsleep(2016300);
 8d0:	b9 60 08 00 	mv r1,r11
 8d4:	fb ff ff 94 	calli 724 <nsleep>
	//}
	//c = 0;
	//while (c==0){
		uart_putstr1("AT+CIPSTART=\"TCP\",\"192.168.4.2\",1234\r\n");
 8d8:	78 01 00 00 	mvhi r1,0x0
 8dc:	38 21 0a c8 	ori r1,r1,0xac8
 8e0:	fb ff ff e1 	calli 864 <uart_putstr1>
		//c = ok();
		nsleep(2016300);
 8e4:	b9 60 08 00 	mv r1,r11
 8e8:	fb ff ff 8f 	calli 724 <nsleep>
		uart_putstr1("AT+CIPSEND\r\n");
 8ec:	78 01 00 00 	mvhi r1,0x0
 8f0:	38 21 0a f0 	ori r1,r1,0xaf0
 8f4:	fb ff ff dc 	calli 864 <uart_putstr1>
		nsleep(2016300);
 8f8:	b9 60 08 00 	mv r1,r11
 8fc:	fb ff ff 8a 	calli 724 <nsleep>
	//}
}
 900:	2b 9d 00 04 	lw ra,(sp+4)
 904:	2b 8b 00 08 	lw r11,(sp+8)
 908:	37 9c 00 08 	addi sp,sp,8
 90c:	c3 a0 00 00 	ret

00000910 <wifi_putchar>:

void wifi_putchar(char a){
 910:	78 02 00 00 	mvhi r2,0x0
 914:	38 42 0b 04 	ori r2,r2,0xb04
 918:	28 43 00 00 	lw r3,(r2+0)
 91c:	20 21 00 ff 	andi r1,r1,0xff
	return uart1->rxtx;
}

void uart_putchar1(char c)
{
	while (uart1->ucr & UART_BUSY) ;
 920:	28 62 00 00 	lw r2,(r3+0)
 924:	20 42 00 10 	andi r2,r2,0x10
 928:	5c 40 ff fe 	bne r2,r0,920 <wifi_putchar+0x10>
	uart1->rxtx = c;
 92c:	58 61 00 04 	sw (r3+4),r1
	//int c = 0; 	  
	//while(c == 0){
		uart_putchar1(a);
		//c = ok();
	//}
}
 930:	c3 a0 00 00 	ret

00000934 <wifi_getchar>:
			c = uart_getchar1();
			return c;
			break;
		}
	}
	return '\n';
 934:	78 01 00 00 	mvhi r1,0x0
 938:	38 21 0b 04 	ori r1,r1,0xb04
 93c:	28 22 00 00 	lw r2,(r1+0)
}

char wifi_getchar(){
	char c='\n';
	int i=0;
	for(i=0;i<20;i++){
 940:	34 03 00 00 	mvi r3,0
		c = uart_getchar1();
		if (c ==':'){
 944:	34 04 00 3a 	mvi r4,58
}

char wifi_getchar(){
	char c='\n';
	int i=0;
	for(i=0;i<20;i++){
 948:	34 05 00 14 	mvi r5,20
	//uart1->div = (FCPU/(57600*16));
}

char uart_getchar1()
{   
	while (! (uart1->ucr & UART_DR)) ;
 94c:	28 41 00 00 	lw r1,(r2+0)
 950:	20 21 00 01 	andi r1,r1,0x1
 954:	44 20 ff fe 	be r1,r0,94c <wifi_getchar+0x18>
	return uart1->rxtx;
 958:	28 41 00 04 	lw r1,(r2+4)
}

char wifi_getchar(){
	char c='\n';
	int i=0;
	for(i=0;i<20;i++){
 95c:	34 63 00 01 	addi r3,r3,1
		c = uart_getchar1();
		if (c ==':'){
 960:	20 21 00 ff 	andi r1,r1,0xff
 964:	44 24 00 04 	be r1,r4,974 <wifi_getchar+0x40>
}

char wifi_getchar(){
	char c='\n';
	int i=0;
	for(i=0;i<20;i++){
 968:	5c 65 ff f9 	bne r3,r5,94c <wifi_getchar+0x18>
			c = uart_getchar1();
			return c;
			break;
		}
	}
	return '\n';
 96c:	34 01 00 0a 	mvi r1,10

}
 970:	c3 a0 00 00 	ret
	//uart1->div = (FCPU/(57600*16));
}

char uart_getchar1()
{   
	while (! (uart1->ucr & UART_DR)) ;
 974:	28 41 00 00 	lw r1,(r2+0)
 978:	20 21 00 01 	andi r1,r1,0x1
 97c:	44 20 ff fe 	be r1,r0,974 <wifi_getchar+0x40>
	return uart1->rxtx;
 980:	28 41 00 04 	lw r1,(r2+4)
 984:	20 21 00 ff 	andi r1,r1,0xff
	int i=0;
	for(i=0;i<20;i++){
		c = uart_getchar1();
		if (c ==':'){
			c = uart_getchar1();
			return c;
 988:	c3 a0 00 00 	ret

0000098c <ok>:
		a=uart_getchar1();
		if(a=='K'){
			return 1;
		}
	}
	return 0;
 98c:	78 01 00 00 	mvhi r1,0x0
 990:	38 21 0b 04 	ori r1,r1,0xb04
 994:	28 22 00 00 	lw r2,(r1+0)
}

int ok(){
	int i=0;
	char a;
	for(i=0;i<30;i++){
 998:	34 03 00 00 	mvi r3,0
		a=uart_getchar1();
		if(a=='K'){
 99c:	34 04 00 4b 	mvi r4,75
}

int ok(){
	int i=0;
	char a;
	for(i=0;i<30;i++){
 9a0:	34 05 00 1e 	mvi r5,30
	//uart1->div = (FCPU/(57600*16));
}

char uart_getchar1()
{   
	while (! (uart1->ucr & UART_DR)) ;
 9a4:	28 41 00 00 	lw r1,(r2+0)
 9a8:	20 21 00 01 	andi r1,r1,0x1
 9ac:	44 20 ff fe 	be r1,r0,9a4 <ok+0x18>
	return uart1->rxtx;
 9b0:	28 41 00 04 	lw r1,(r2+4)
}

int ok(){
	int i=0;
	char a;
	for(i=0;i<30;i++){
 9b4:	34 63 00 01 	addi r3,r3,1
		a=uart_getchar1();
		if(a=='K'){
 9b8:	20 21 00 ff 	andi r1,r1,0xff
 9bc:	44 24 00 04 	be r1,r4,9cc <ok+0x40>
}

int ok(){
	int i=0;
	char a;
	for(i=0;i<30;i++){
 9c0:	5c 65 ff f9 	bne r3,r5,9a4 <ok+0x18>
		a=uart_getchar1();
		if(a=='K'){
			return 1;
		}
	}
	return 0;
 9c4:	34 01 00 00 	mvi r1,0
 9c8:	c3 a0 00 00 	ret
	int i=0;
	char a;
	for(i=0;i<30;i++){
		a=uart_getchar1();
		if(a=='K'){
			return 1;
 9cc:	34 01 00 01 	mvi r1,1
		}
	}
	return 0;

}
 9d0:	c3 a0 00 00 	ret

000009d4 <ReadChanel>:
Stop"BOTH"
ByteReaded"READ"
ByteToWrite"WRITE
*/

void ReadChanel(char ch){
 9d4:	20 21 00 ff 	andi r1,r1,0xff
	switch(ch){
 9d8:	34 02 00 01 	mvi r2,1
 9dc:	44 22 00 1f 	be r1,r2,a58 <ReadChanel+0x84>
 9e0:	5c 20 00 0e 	bne r1,r0,a18 <ReadChanel+0x44>
	   break;
	   case 0x03:
		i2c0->ByteConfigurationOne=0xF3;
	   break;
	   default:
		i2c0->ByteConfigurationOne=0xC3;
 9e4:	78 01 00 00 	mvhi r1,0x0
 9e8:	38 21 0b 0c 	ori r1,r1,0xb0c
 9ec:	28 21 00 00 	lw r1,(r1+0)
 9f0:	34 02 00 c3 	mvi r2,195
 9f4:	58 22 00 0c 	sw (r1+12),r2
	   break;
	}
	i2c0->ByteConfigurationTwo=0X83;//FS 4.096 volts although this is more than electrical especifications,there never be more than 3.6
 9f8:	34 02 00 83 	mvi r2,131
 9fc:	58 22 00 10 	sw (r1+16),r2
	i2c0->Start=0x01;
 a00:	34 02 00 01 	mvi r2,1
 a04:	58 22 00 14 	sw (r1+20),r2
	while((i2c0->Busy)==0x01);
 a08:	34 03 00 01 	mvi r3,1
 a0c:	28 22 00 00 	lw r2,(r1+0)
 a10:	44 43 ff ff 	be r2,r3,a0c <ReadChanel+0x38>
}
 a14:	c3 a0 00 00 	ret
ByteReaded"READ"
ByteToWrite"WRITE
*/

void ReadChanel(char ch){
	switch(ch){
 a18:	34 02 00 02 	mvi r2,2
 a1c:	44 22 00 09 	be r1,r2,a40 <ReadChanel+0x6c>
 a20:	34 02 00 03 	mvi r2,3
 a24:	5c 22 ff f0 	bne r1,r2,9e4 <ReadChanel+0x10>
	   break;
	   case 0x02:
		i2c0->ByteConfigurationOne=0xE3;
	   break;
	   case 0x03:
		i2c0->ByteConfigurationOne=0xF3;
 a28:	78 01 00 00 	mvhi r1,0x0
 a2c:	38 21 0b 0c 	ori r1,r1,0xb0c
 a30:	28 21 00 00 	lw r1,(r1+0)
 a34:	34 02 00 f3 	mvi r2,243
 a38:	58 22 00 0c 	sw (r1+12),r2
	   break;
 a3c:	e3 ff ff ef 	bi 9f8 <ReadChanel+0x24>
	   break;
	   case 0x01:
		i2c0->ByteConfigurationOne=0xD3;
	   break;
	   case 0x02:
		i2c0->ByteConfigurationOne=0xE3;
 a40:	78 01 00 00 	mvhi r1,0x0
 a44:	38 21 0b 0c 	ori r1,r1,0xb0c
 a48:	28 21 00 00 	lw r1,(r1+0)
 a4c:	34 02 00 e3 	mvi r2,227
 a50:	58 22 00 0c 	sw (r1+12),r2
	   break;
 a54:	e3 ff ff e9 	bi 9f8 <ReadChanel+0x24>
	switch(ch){
	   case 0x00:
		i2c0->ByteConfigurationOne=0xC3;
	   break;
	   case 0x01:
		i2c0->ByteConfigurationOne=0xD3;
 a58:	78 01 00 00 	mvhi r1,0x0
 a5c:	38 21 0b 0c 	ori r1,r1,0xb0c
 a60:	28 21 00 00 	lw r1,(r1+0)
 a64:	34 02 00 d3 	mvi r2,211
 a68:	58 22 00 0c 	sw (r1+12),r2
	   break;
 a6c:	e3 ff ff e3 	bi 9f8 <ReadChanel+0x24>

00000a70 <GetByteOne>:
	while((i2c0->Busy)==0x01);
}


char GetByteOne(){
	return i2c0->ByteReadedOne;
 a70:	78 01 00 00 	mvhi r1,0x0
 a74:	38 21 0b 0c 	ori r1,r1,0xb0c
 a78:	28 21 00 00 	lw r1,(r1+0)
 a7c:	28 21 00 04 	lw r1,(r1+4)
}
 a80:	20 21 00 ff 	andi r1,r1,0xff
 a84:	c3 a0 00 00 	ret

00000a88 <GetByteTwo>:
char GetByteTwo()
{
	return i2c0->ByteReadedTwo;
 a88:	78 01 00 00 	mvhi r1,0x0
 a8c:	38 21 0b 0c 	ori r1,r1,0xb0c
 a90:	28 21 00 00 	lw r1,(r1+0)
 a94:	28 21 00 08 	lw r1,(r1+8)
}
 a98:	20 21 00 ff 	andi r1,r1,0xff
 a9c:	c3 a0 00 00 	ret
